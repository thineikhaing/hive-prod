-#.top_bar1
-#  .logo_header
-#    %span{style:'font-size: 4em !important;color: rgb(7,165,179)'}carmic
-#    %br
-#    %span{style:"font-size: 18px"}at the apiary
-#  .redCar
-#    = image_tag("RedH.png",alt: "CarMask" )
-#
-#  .green_cicle
-#  .active_car
-#    =@users.count
-#    active vehicles
-#
-#  .pink_cicle
-#  .incident_car
-#    0 incidents


.row
  .columns.large-2#dashbeta
    carmic
    %sub{style:'font-size:15px;line-height:0px;'}
      DASH beta

  .columns.large-9.right#lefttopbar
    menu

.row
  .columns.large-6
    .circle
      #map


    -##map_wrapper
    -#  .carmic_map
    -#    #map


    #btn_zoom_out
      ='-'
    #btn_zoom_in
      ='+'

  .columns.large-6#sub_left
    .columns.large-4
      %span.totalmsgCircle
        =@topics.count
      total message here
    .columns.large-4
      %span.greenCirlce
        =@users.count
      %span active vehicle
    .columns.large-4
      %span.redCirlce
        =0
      incidents
.row
  .columns.large-6.right.message_list
    message list


:javascript
   Carmic.init();

   var __markers,marker;

   var old_markers;

   var handler = Gmaps.build('Google', { builders: { Marker: InfoBoxBuilder} });

     handler.buildMap({
        provider: {
          disableDefaultUI:true,
          zoom: 16,
          streetViewControl: false,
          panControl: false,
          mapTypeControl: true,
          mapTypeControlOptions: {
            style: google.maps.MapTypeControlStyle.DEFAULT,
            mapTypeIds: [
              google.maps.MapTypeId.ROADMAP,
              google.maps.MapTypeId.TERRAIN
            ]
          },
          zoomControl: false,
        },
        internal: {id: 'map'}
        }, function(){


       var markers = handler.addMarkers(#{raw @hash.to_json});


       __markers = markers
       old_markers = #{raw @hash.to_json}



       _.each(markers, function(marker){
          google.maps.event.trigger(marker.getServiceObject(), 'click');
       });

       handler.bounds.extendWith(markers);

       handler.fitMapToBounds();

     });

     var zoomControlDiv = document.createElement('div');
     zoomControlDiv.id = 'custom_zoomcontrol';
     var zoomControl = new CustomZoomControl(zoomControlDiv, map);

     handler.getMap().controls[google.maps.ControlPosition.RIGHT_CENTER].push(zoomControlDiv);

     function updateMarkers(map, new_markers, rm_marker,old_markers)
     {
         // Remove current markers
         console.log("REMOVE MARKERS :::::")
        console.log(rm_marker)
        map.removeMarkers(rm_marker);

         var newMarkers= new_markers;
         var oldMarkers= old_markers;
         // Add each marker to the map according to received data


       map.removeMarkers(rm_marker);
       // Remove current markers
       // Add each marker to the map according to received data

       __markers = _.map(newMarkers, function(markerJSON) {

           marker = map.addMarker(markerJSON);
           //map.getMap().setZoom(16); // Not sure this should be in this iterator!
           console.log('markerJSON')
           console.log(markerJSON["lat"])
           console.log(markerJSON["marker_id"])
           for (var i = 0; i < oldMarkers.length; i++) {
           if (oldMarkers[i]["marker_id"] == markerJSON["marker_id"]) {
               var oldLat = oldMarkers[i]["lat"];
               var oldLng = oldMarkers[i]["lng"];

              var oldPosition = new google.maps.LatLng(oldLat,oldLng);

              marker.animation = new MarkerMoveAnimation(marker,
                 {
                     name: name
                     ,from: oldPosition
                     ,to: marker.getServiceObject().getPosition()
                     ,duration: 1000
                     ,effect: 'linear'
                     ,onStep: function(e)
                     {
                         //e.marker.getServiceObject().leash.setPath([start, e.marker.getServiceObject().getPosition()]);
                     }
                     ,onComplete: function(e)
                     {
                         animating = false;
                     }
                 })
              }

           }
           //google.maps.event.trigger(marker.getServiceObject(), 'click');

           _.extend(marker, markerJSON);


           marker.infowindow = new google.maps.InfoWindow({
               content: marker.infowindow
           });


           return marker;
       });

       //map.bounds.extendWith(__markers);


     };

     function getCoords(){
         $.ajax({
             type: 'GET',
             url: "#{@url}",
             success: function(data){

                 updateMarkers(handler,data.marker,__markers,old_markers);

                 old_markers = data.marker

                 $(data.marker).each(function(i,e){
                     var marker = e;
                     var lat = e["lat"];
                     var lng = e["lng"];
                 })

             }
         });
     }

  window.setInterval(getCoords, 4000);
